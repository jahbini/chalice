// Generated by CoffeeScript 1.12.7

/*
 * Remove react dependency
 * Rebass, too, boo hoo
 */

(function() {
  var Teact,
    slice = [].slice;

  module.exports = Teact = (function() {
    var ctor;

    function Teact() {
      return ctor.apply(this, arguments);
    }

    ctor = Teact.stack = null;

    Teact.prototype.resetStack = function(stack) {
      var previous;
      if (stack == null) {
        stack = null;
      }
      previous = this.stack;
      this.stack = stack;
      return previous;
    };

    Teact.prototype.crel = function() {
      var args, attrs, children, contents, el, previous, ref, ref1, tagName;
      tagName = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      if (tagName == null) {
        throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + tagName);
      }
      ref = this.normalizeArgs(args), attrs = ref.attrs, contents = ref.contents;
      switch (typeof contents) {
        case 'function':
          previous = this.resetStack([]);
          contents();
          children = this.resetStack(previous);
          break;
        default:
          children = contents;
      }
      if (children != null ? children.splice : void 0) {
        el = Master.createElement.apply(Master, [tagName, attrs].concat(slice.call(children)));
      } else {
        el = Master.createElement(tagName, attrs, children);
      }
      if ((ref1 = this.stack) != null) {
        ref1.push(el);
      }
      return el;
    };

    Teact.prototype.pureComponent = function(contents) {
      var teact;
      teact = this;
      return function() {
        var children, previous;
        previous = teact.resetStack(null);
        children = contents.apply(teact, arguments);
        teact.resetStack(previous);
        return children;
      };
    };

    Teact.prototype.text = function(s) {
      var ref;
      if (!(s != null ? s.toString : void 0)) {
        return s;
      }
      if ((ref = this.stack) != null) {
        ref.push(s.toString());
      }
      return s.toString();
    };

    return Teact;

  })();

}).call(this);
